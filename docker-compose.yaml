---
version: '3.7'

services:

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    image: phpbin-nginx
    container_name: phpbin-nginx
    restart: unless-stopped
    volumes:
      - ./public:/srv/public
    expose:
      - 80
    depends_on:
      - fpm
    networks:
      default:
        aliases:
          - nginx
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
      - CHOWN
      - NET_BIND_SERVICE
    healthcheck:
      test: nc -z localhost 80
      interval: 5s

  fpm:
    build:
      context: .
      dockerfile: docker/fpm/Dockerfile
      target: base
    image: phpbin-fpm:base
    container_name: phpbin-fpm
    restart: unless-stopped
    user: $DOCKER_UID:$DOCKER_GID
    environment:
      - APP_ENV=dev
      - APP_DEBUG=1
      - APP_SECRET=not-so-secret
    working_dir: /srv
    volumes:
      - .:/srv
    tmpfs:
      - /tmp
    depends_on:
      - redis
    networks:
      default:
        aliases:
          - fcgi
    cap_drop:
      - ALL
    healthcheck:
      test: nc -z localhost 9000
      interval: 5s

  composer:
    build:
      context: .
      dockerfile: docker/fpm/Dockerfile
      target: composer
    image: phpbin-fpm:composer
    container_name: phpbin-composer
    init: true
    command:
      - 'true'
    user: $DOCKER_UID:$DOCKER_GID
    environment:
      - APP_ENV=dev
      - APP_DEBUG=1
      - APP_SECRET=not-so-secret
    working_dir: /srv
    volumes:
      - .:/srv
    tmpfs:
      - /tmp
      - /.composer
    cap_drop:
      - ALL
    healthcheck:
      test: nc -z localhost 9000
      interval: 5s

  redis:
    image: redis:6-alpine
    container_name: phpbin-redis
    restart: unless-stopped
    command: "redis-server --appendonly yes"
    networks:
      default:
    tmpfs:
      - /tmp
    volumes:
      - redis:/data
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID
    sysctls:
      net.core.somaxconn: 1024
    healthcheck:
      test: nc -z localhost 6379
      interval: 5s

networks:

  default:

volumes:

  redis:
